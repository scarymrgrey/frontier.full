#
# CORE
# Copyright (c)2010-2012 the Boeing Company.
# See the LICENSE file included in this distribution.
#
''' Sample user-defined service.
'''

import os

from core.service import CoreService, addservice
from core.misc.ipaddr import IPv4Prefix, IPv6Prefix

class OlsrETX(CoreService):
    ''' Optimized Link State Routing protocol for MANET networks.
    '''
    # a unique name is required, without spaces
    _name = "OLSRETX"
    # you can create your own group here
    _group = "SEEP"
    # list of other services this service depends on
    _depends = ()
    # per-node directories
    _dirs = ()
    # generated files (without a full path this file goes in the node's dir,
    #  e.g. /tmp/pycore.12345/n1.conf/)
    _configs = ('olsretx.sh', )
    # this controls the starting order vs other enabled services
    _startindex = 45
    # list of startup commands, also may be generated during startup
    _startup = ('sh olsretx.sh',)
    # list of shutdown commands
    _shutdown = ("killall olsrd",)
    _validate = ("pidof olsrd",)


    """
    @classmethod
    def getstartup(cls,  node,  services):
        ''' Generate the appropriate command-line based on node interfaces.
        '''
        cmd = cls._startup[0]
        # are multiple interfaces supported? No.
        netifs = list(node.netifs())
        if len(netifs) > 0:
            ifc = netifs[0]
            cmd += " -i %s" % ifc.name
        cmd += " -l /var/log/nrlolsrd.log"
        cmd += " -rpipe %s_olsr" % node.name

        return (cmd, )
    """
    @classmethod
    def generateconfig(cls, node, filename, services):
        ''' Return a string that will be written to filename, or sent to the
            GUI for user customization.
        '''
        cfg = "#!/bin/sh\n"
        cfg += "# auto-generated by MyService (sample.py)\n"

        cfg += "exec > olsrd-etx.log\n"
        cfg += "olsrd "
        netifs = list(node.netifs())
        if len(netifs) > 0:
            ifc = netifs[0]
            cfg += " -i %s" % ifc.name
        cfg += " &"
        #cfg += " 2>&1 olsrd-etx.log &"
        return cfg

# this line is required to add the above class to the list of available services
addservice(OlsrETX)

